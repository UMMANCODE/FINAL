services:
  final.api:
    networks:
      - my-network
    container_name: final.api
    environment:
      - APPDATA=/appdata
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Server=db;Database=FinalApp;User Id=sa;Password=Your_password123;TrustServerCertificate=true;
      - ConnectionStrings__RedisConnection=redis:6379
      - JWT__Secret=7E2A1F8D5C6B7A4E9F6B4C7A1F8D2E3F4D5A6C9B7E3F1A8D2B4E6F9E8D3C1A8F6B4A8D4A7F1B1F8A6C8D3F2A94A4B49D
      - JWT__Issuer=https://ayazumman.xyz/
      - JWT__Audience=https://ayazumman.xyz/
      - Client__URL=https://ayazumman.xyz/
      - IsDocker=true
      - HOST=ayazumman.xyz
      - PORT=443
      - PROTOCOL=https
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/ayazumman.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=ayazumman
    ports:
      - "443:8081"
    volumes:
      - ./certs:/https:ro
    depends_on:
      - db
      - redis
    user: root  

  final.ui:
    networks:
      - my-network
    container_name: final.ui
    environment:
      - APPDATA=/appdata
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTPS_PORTS=8081
      - APIEndpoint=https://final.api:8081/api
      - StaticAPIEndpoint=https://ayazumman.xyz/api
      - IsDocker=true
      - HOST=ayazumman.xyz
    ports:
      - "443:8081"
    volumes:
      - ./certs:/https:ro
    depends_on:
      - final.api
    user: root  

  db:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    networks:
      - my-network
    container_name: db
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "3433:1433"
    volumes:
      - mssql_data:/var/opt/mssql

  redis:
    image: "redis:latest"
    networks:
      - my-network
    container_name: redis
    ports:
      - "8379:6379"
    restart: always
    volumes:
      - redis_data:/data

volumes:
  mssql_data:
  redis_data:

networks:
  my-network:
    driver: bridge
