version: '3.4'

services:
  final.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=Server=db;Database=FinalApp;User Id=sa;Password=Your_password123;TrustServerCertificate=true;
      - ConnectionStrings__RedisConnection=redis:6379
      - JWT__Secret=7E2A1F8D5C6B7A4E9F6B4C7A1F8D2E3F4D5A6C9B7E3F1A8D2B4E6F9E8D3C1A8F6B4A8D4A7F1B1F8A6C8D3F2A94A4B49D
      - JWT__Issuer=http://final.api:8080/
      - JWT__Audience=http://final.api:8080/
      - Client__URL=http://final.ui/
      - IsDocker=true
      - HOST=localhost
      - PORT=8080
      - PROTOCOL=http 
    ports:
      - "8080:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - db
      - redis

  final.ui:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - APIEndpoint=http://final.api:8080/api
      - StaticAPIEndpoint=http://localhost:8080/api
      - IsDocker=true
      - HOST=localhost
    ports:
      - "80:8080"
    depends_on:
      - final.api
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  db:
    container_name: db
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "3433:1433"
    volumes:
      - mssql_data:/var/opt/mssql

  redis:
    container_name: redis
    ports:
      - "8379:6379"
    restart: always
    volumes:
      - redis_data:/data
